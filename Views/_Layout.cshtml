@using Umbraco.Cms.Web.Common.PublishedModels;
@using Microsoft.AspNetCore.Html;
@using Microsoft.AspNetCore.WebUtilities;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@{
    Layout = null;
}
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <link rel="stylesheet" href="../App.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <title>@ViewData["Title"]?.ToString() | Crito - Agency Service</title>
</head>
<body>
    
    @await Html.PartialAsync("Navbar")
    
    @RenderBody()
    
    @await Html.PartialAsync("Footer")
    
    @await Html.PartialAsync("_Footer")

    <script src="https://kit.fontawesome.com/41c8b474e2.js" crossorigin="anonymous"></script>
    <script>
        const validateForm = () => {
            document.getElementById("nameError").textContent = "";
            document.getElementById("emailError").textContent = "";
            document.getElementById("messageError").textContent = "";

            const name = document.getElementById("name").value;
            const email = document.getElementById("email").value;
            const message = document.getElementById("message").value;

            if (name.length < 3) {
                document.getElementById("nameError").textContent = "Name must be at least 3 characters";
                return false;
            }

            if (name.length > 50) {
                document.getElementById("nameError").textContent = "Name cannot exceed 50 characters";
                return false;
            }

            const emailRegexPattern = /^[a-zA-Z0-9]([\w\-\.\+\']*)@@([\w\-\.]*)(\.[a-zA-Z]{2,20}(\.[a-zA-Z]{2}){0,2})$/;

            if (!email.match(emailRegexPattern)) {
                document.getElementById("emailError").textContent = "Enter a valid email address";
                return false;
            }

            if (message.trim() === "") {
                document.getElementById("messageError").textContent = "Message is required";
                return false;
            }

            return true;
        }
    </script>
</body>
</html>